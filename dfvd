#include <QTRSensors.h>

#define rightMotor1 5
#define rightMotor2 18
#define leftMotor1 17
#define leftMotor2 16

#define LED_PIN 2

QTRSensors qtr;

const int THRESHOLD = 800;

void setup() {
  Serial.begin(115200);

  pinMode(rightMotor1, OUTPUT);
  pinMode(rightMotor2, OUTPUT);
  pinMode(leftMotor1, OUTPUT);
  pinMode(leftMotor2, OUTPUT);

  pinMode(LED_PIN, OUTPUT);
  digitalWrite(LED_PIN, LOW);

  qtr.setTypeAnalog();
  qtr.setSensorPins((const uint8_t[]){34, 39, 36, 0, 2, 15}, 6);

  for (int calibrateStep = 0; calibrateStep < 2; calibrateStep++) {
    for (int i = 0; i < 50; i++) {
      if (calibrateStep == 0) {
        analogWrite(rightMotor1, 0);
        analogWrite(rightMotor2, 100);
        analogWrite(leftMotor1, 100);
        analogWrite(leftMotor2, 0);
      } else {
        analogWrite(rightMotor1, 100);
        analogWrite(rightMotor2, 0);
        analogWrite(leftMotor1, 0);
        analogWrite(leftMotor2, 100);
      }

      qtr.calibrate();

      digitalWrite(LED_PIN, HIGH);
      delay(100);
      digitalWrite(LED_PIN, LOW);
      delay(100);
    }
  }

  analogWrite(rightMotor1, 0);
  analogWrite(rightMotor2, 0);
  analogWrite(leftMotor1, 0);
  analogWrite(leftMotor2, 0);
}

void loop() {
  uint32_t output = 0;

  uint16_t sensorValues[6];
  qtr.read(sensorValues);

  for (int i = 0; i < 6; i++) {
    output <<= 1;
    output |= (sensorValues[i] > THRESHOLD) ? 1 : 0;
  }

  for (int i = 6 - 1; i >= 0; i--) {
    Serial.print((output >> i) & 1);
    Serial.print(" ");
  }
  Serial.println();

  delay(100);
}
